// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: v1/example.proto

package v1

import (
	_ "github.com/pquerna/protoc-gen-dynamo/dynamo/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BasicEnum int32

const (
	BasicEnum_First  BasicEnum = 0
	BasicEnum_Second BasicEnum = 1
)

// Enum value maps for BasicEnum.
var (
	BasicEnum_name = map[int32]string{
		0: "First",
		1: "Second",
	}
	BasicEnum_value = map[string]int32{
		"First":  0,
		"Second": 1,
	}
)

func (x BasicEnum) Enum() *BasicEnum {
	p := new(BasicEnum)
	*p = x
	return p
}

func (x BasicEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BasicEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_example_proto_enumTypes[0].Descriptor()
}

func (BasicEnum) Type() protoreflect.EnumType {
	return &file_v1_example_proto_enumTypes[0]
}

func (x BasicEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BasicEnum.Descriptor instead.
func (BasicEnum) EnumDescriptor() ([]byte, []int) {
	return file_v1_example_proto_rawDescGZIP(), []int{0}
}

type Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Country         string                 `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Region          string                 `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	State           string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	City            string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Closed          bool                   `protobuf:"varint,6,opt,name=closed,proto3" json:"closed,omitempty"`
	OpeningDate     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=opening_date,json=openingDate,proto3" json:"opening_date,omitempty"`
	BestEmployeeIds []string               `protobuf:"bytes,8,rep,name=best_employee_ids,json=bestEmployeeIds,proto3" json:"best_employee_ids,omitempty"`
	BinDate         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=bin_date,json=binDate,proto3" json:"bin_date,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ExpiresAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	ExpiresAtMs     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=expires_at_ms,json=expiresAtMs,proto3" json:"expires_at_ms,omitempty"`
	ExpiresAtNs     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires_at_ns,json=expiresAtNs,proto3" json:"expires_at_ns,omitempty"`
	Foo             uint64                 `protobuf:"varint,99,opt,name=foo,proto3" json:"foo,omitempty"`
	Morefoo         []uint64               `protobuf:"varint,100,rep,packed,name=morefoo,proto3" json:"morefoo,omitempty"`
}

func (x *Store) Reset() {
	*x = Store{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_v1_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_v1_example_proto_rawDescGZIP(), []int{0}
}

func (x *Store) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Store) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Store) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Store) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Store) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Store) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

func (x *Store) GetOpeningDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpeningDate
	}
	return nil
}

func (x *Store) GetBestEmployeeIds() []string {
	if x != nil {
		return x.BestEmployeeIds
	}
	return nil
}

func (x *Store) GetBinDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BinDate
	}
	return nil
}

func (x *Store) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Store) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Store) GetExpiresAtMs() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAtMs
	}
	return nil
}

func (x *Store) GetExpiresAtNs() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAtNs
	}
	return nil
}

func (x *Store) GetFoo() uint64 {
	if x != nil {
		return x.Foo
	}
	return 0
}

func (x *Store) GetMorefoo() []uint64 {
	if x != nil {
		return x.Morefoo
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId    string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Id          string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	IdpId       string                 `protobuf:"bytes,6,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
	DisplayName string                 `protobuf:"bytes,7,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Email       string                 `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	AnEnum      BasicEnum              `protobuf:"varint,9,opt,name=an_enum,json=anEnum,proto3,enum=examplepb.v1.BasicEnum" json:"an_enum,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_v1_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_v1_example_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *User) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetAnEnum() BasicEnum {
	if x != nil {
		return x.AnEnum
	}
	return BasicEnum_First
}

type StoreV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Country         string                 `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Region          string                 `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	State           string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	City            string                 `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Closed          bool                   `protobuf:"varint,6,opt,name=closed,proto3" json:"closed,omitempty"`
	OpeningDate     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=opening_date,json=openingDate,proto3" json:"opening_date,omitempty"`
	BestEmployeeIds []string               `protobuf:"bytes,8,rep,name=best_employee_ids,json=bestEmployeeIds,proto3" json:"best_employee_ids,omitempty"`
	BinDate         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=bin_date,json=binDate,proto3" json:"bin_date,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ExpiresAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	ExpiresAtMs     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=expires_at_ms,json=expiresAtMs,proto3" json:"expires_at_ms,omitempty"`
	ExpiresAtNs     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires_at_ns,json=expiresAtNs,proto3" json:"expires_at_ns,omitempty"`
	Foo             uint64                 `protobuf:"varint,99,opt,name=foo,proto3" json:"foo,omitempty"`
	Morefoo         []uint64               `protobuf:"varint,100,rep,packed,name=morefoo,proto3" json:"morefoo,omitempty"`
}

func (x *StoreV2) Reset() {
	*x = StoreV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_example_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreV2) ProtoMessage() {}

func (x *StoreV2) ProtoReflect() protoreflect.Message {
	mi := &file_v1_example_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreV2.ProtoReflect.Descriptor instead.
func (*StoreV2) Descriptor() ([]byte, []int) {
	return file_v1_example_proto_rawDescGZIP(), []int{2}
}

func (x *StoreV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StoreV2) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *StoreV2) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *StoreV2) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StoreV2) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *StoreV2) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

func (x *StoreV2) GetOpeningDate() *timestamppb.Timestamp {
	if x != nil {
		return x.OpeningDate
	}
	return nil
}

func (x *StoreV2) GetBestEmployeeIds() []string {
	if x != nil {
		return x.BestEmployeeIds
	}
	return nil
}

func (x *StoreV2) GetBinDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BinDate
	}
	return nil
}

func (x *StoreV2) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *StoreV2) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *StoreV2) GetExpiresAtMs() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAtMs
	}
	return nil
}

func (x *StoreV2) GetExpiresAtNs() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAtNs
	}
	return nil
}

func (x *StoreV2) GetFoo() uint64 {
	if x != nil {
		return x.Foo
	}
	return 0
}

func (x *StoreV2) GetMorefoo() []uint64 {
	if x != nil {
		return x.Morefoo
	}
	return nil
}

type UserV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId    string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Id          string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	IdpId       string                 `protobuf:"bytes,6,opt,name=idp_id,json=idpId,proto3" json:"idp_id,omitempty"`
	DisplayName string                 `protobuf:"bytes,7,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Email       string                 `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	AnEnum      BasicEnum              `protobuf:"varint,9,opt,name=an_enum,json=anEnum,proto3,enum=examplepb.v1.BasicEnum" json:"an_enum,omitempty"`
}

func (x *UserV2) Reset() {
	*x = UserV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_example_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserV2) ProtoMessage() {}

func (x *UserV2) ProtoReflect() protoreflect.Message {
	mi := &file_v1_example_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserV2.ProtoReflect.Descriptor instead.
func (*UserV2) Descriptor() ([]byte, []int) {
	return file_v1_example_proto_rawDescGZIP(), []int{3}
}

func (x *UserV2) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UserV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserV2) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserV2) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserV2) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *UserV2) GetIdpId() string {
	if x != nil {
		return x.IdpId
	}
	return ""
}

func (x *UserV2) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserV2) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserV2) GetAnEnum() BasicEnum {
	if x != nil {
		return x.AnEnum
	}
	return BasicEnum_First
}

var File_v1_example_proto protoreflect.FileDescriptor

var file_v1_example_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x76, 0x31,
	0x1a, 0x16, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x05, 0x0a, 0x05, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x10, 0x82, 0xf7, 0x02, 0x0c, 0x08, 0x01, 0x12, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x09, 0x82, 0xf7, 0x02,
	0x05, 0x1a, 0x03, 0xe0, 0x12, 0x01, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x11, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x42, 0x09,
	0x82, 0xf7, 0x02, 0x05, 0x1a, 0x03, 0xc0, 0x0c, 0x01, 0x52, 0x0f, 0x62, 0x65, 0x73, 0x74, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x49, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x62, 0x69,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x82, 0xf7,
	0x02, 0x07, 0x08, 0x01, 0x1a, 0x03, 0xe0, 0x12, 0x01, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x12, 0x4b, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x61, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x82, 0xf7, 0x02, 0x07, 0x08, 0x01, 0x1a,
	0x03, 0xe8, 0x12, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x4d,
	0x73, 0x12, 0x4b, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x5f,
	0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x82, 0xf7, 0x02, 0x07, 0x08, 0x01, 0x1a, 0x03, 0xf0, 0x12,
	0x01, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x4e, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x18, 0x63, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x6f, 0x6f,
	0x12, 0x23, 0x0a, 0x07, 0x6d, 0x6f, 0x72, 0x65, 0x66, 0x6f, 0x6f, 0x18, 0x64, 0x20, 0x03, 0x28,
	0x04, 0x42, 0x09, 0x82, 0xf7, 0x02, 0x05, 0x1a, 0x03, 0xc0, 0x0c, 0x01, 0x52, 0x07, 0x6d, 0x6f,
	0x72, 0x65, 0x66, 0x6f, 0x6f, 0x3a, 0x41, 0x82, 0xf7, 0x02, 0x3d, 0x12, 0x1b, 0x0a, 0x02, 0x69,
	0x64, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x1a,
	0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x1a, 0x0a, 0x64, 0x75,
	0x6d, 0x6d, 0x79, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x64, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x30, 0x0a, 0x07, 0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x6e, 0x45, 0x6e, 0x75,
	0x6d, 0x3a, 0x3d, 0x82, 0xf7, 0x02, 0x39, 0x12, 0x0f, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x12, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x11, 0x0a,
	0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x0a, 0x07, 0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x75, 0x6d,
	0x22, 0xf0, 0x05, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x32, 0x12, 0x20, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x82, 0xf7, 0x02, 0x0c, 0x08, 0x01,
	0x12, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x12, 0x48, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x09, 0x82, 0xf7, 0x02, 0x05, 0x1a, 0x03, 0xe0, 0x12, 0x01, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x11,
	0x62, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x42, 0x09, 0x82, 0xf7, 0x02, 0x05, 0x1a, 0x03, 0xc0,
	0x0c, 0x01, 0x52, 0x0f, 0x62, 0x65, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x82, 0xf7, 0x02, 0x07, 0x08, 0x01, 0x1a, 0x03, 0xe0,
	0x12, 0x01, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x4b, 0x0a,
	0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x42, 0x0b, 0x82, 0xf7, 0x02, 0x07, 0x08, 0x01, 0x1a, 0x03, 0xe8, 0x12, 0x01, 0x52, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x4d, 0x73, 0x12, 0x4b, 0x0a, 0x0d, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0b, 0x82,
	0xf7, 0x02, 0x07, 0x08, 0x01, 0x1a, 0x03, 0xf0, 0x12, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x41, 0x74, 0x4e, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x18, 0x63,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x6f, 0x6f, 0x12, 0x23, 0x0a, 0x07, 0x6d, 0x6f, 0x72,
	0x65, 0x66, 0x6f, 0x6f, 0x18, 0x64, 0x20, 0x03, 0x28, 0x04, 0x42, 0x09, 0x82, 0xf7, 0x02, 0x05,
	0x1a, 0x03, 0xc0, 0x0c, 0x01, 0x52, 0x07, 0x6d, 0x6f, 0x72, 0x65, 0x66, 0x6f, 0x6f, 0x3a, 0x43,
	0x82, 0xf7, 0x02, 0x3f, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x1a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x1a, 0x0a, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x22, 0xa9, 0x03, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x56, 0x32, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x64,
	0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x07,
	0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x3a, 0x3f,
	0x82, 0xf7, 0x02, 0x3b, 0x12, 0x0f, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x12, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x12, 0x06, 0x69, 0x64, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x11, 0x0a, 0x06, 0x69, 0x64,
	0x70, 0x5f, 0x69, 0x64, 0x0a, 0x07, 0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x2a,
	0x22, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x09, 0x0a, 0x05,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x10, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x70, 0x71, 0x75, 0x65, 0x72, 0x6e, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x6f, 0x2f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_example_proto_rawDescOnce sync.Once
	file_v1_example_proto_rawDescData = file_v1_example_proto_rawDesc
)

func file_v1_example_proto_rawDescGZIP() []byte {
	file_v1_example_proto_rawDescOnce.Do(func() {
		file_v1_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_example_proto_rawDescData)
	})
	return file_v1_example_proto_rawDescData
}

var file_v1_example_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_example_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_example_proto_goTypes = []interface{}{
	(BasicEnum)(0),                // 0: examplepb.v1.BasicEnum
	(*Store)(nil),                 // 1: examplepb.v1.Store
	(*User)(nil),                  // 2: examplepb.v1.User
	(*StoreV2)(nil),               // 3: examplepb.v1.StoreV2
	(*UserV2)(nil),                // 4: examplepb.v1.UserV2
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_v1_example_proto_depIdxs = []int32{
	5,  // 0: examplepb.v1.Store.opening_date:type_name -> google.protobuf.Timestamp
	5,  // 1: examplepb.v1.Store.bin_date:type_name -> google.protobuf.Timestamp
	5,  // 2: examplepb.v1.Store.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 3: examplepb.v1.Store.expires_at:type_name -> google.protobuf.Timestamp
	5,  // 4: examplepb.v1.Store.expires_at_ms:type_name -> google.protobuf.Timestamp
	5,  // 5: examplepb.v1.Store.expires_at_ns:type_name -> google.protobuf.Timestamp
	5,  // 6: examplepb.v1.User.created_at:type_name -> google.protobuf.Timestamp
	5,  // 7: examplepb.v1.User.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 8: examplepb.v1.User.deleted_at:type_name -> google.protobuf.Timestamp
	0,  // 9: examplepb.v1.User.an_enum:type_name -> examplepb.v1.BasicEnum
	5,  // 10: examplepb.v1.StoreV2.opening_date:type_name -> google.protobuf.Timestamp
	5,  // 11: examplepb.v1.StoreV2.bin_date:type_name -> google.protobuf.Timestamp
	5,  // 12: examplepb.v1.StoreV2.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 13: examplepb.v1.StoreV2.expires_at:type_name -> google.protobuf.Timestamp
	5,  // 14: examplepb.v1.StoreV2.expires_at_ms:type_name -> google.protobuf.Timestamp
	5,  // 15: examplepb.v1.StoreV2.expires_at_ns:type_name -> google.protobuf.Timestamp
	5,  // 16: examplepb.v1.UserV2.created_at:type_name -> google.protobuf.Timestamp
	5,  // 17: examplepb.v1.UserV2.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 18: examplepb.v1.UserV2.deleted_at:type_name -> google.protobuf.Timestamp
	0,  // 19: examplepb.v1.UserV2.an_enum:type_name -> examplepb.v1.BasicEnum
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_v1_example_proto_init() }
func file_v1_example_proto_init() {
	if File_v1_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Store); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_example_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_example_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_example_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_example_proto_goTypes,
		DependencyIndexes: file_v1_example_proto_depIdxs,
		EnumInfos:         file_v1_example_proto_enumTypes,
		MessageInfos:      file_v1_example_proto_msgTypes,
	}.Build()
	File_v1_example_proto = out.File
	file_v1_example_proto_rawDesc = nil
	file_v1_example_proto_goTypes = nil
	file_v1_example_proto_depIdxs = nil
}
